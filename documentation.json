{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ModalDraggableService",
            "id": "injectable-ModalDraggableService-f94cdfbda255c2072efef6f080f41eac5b30a0e6f4d548980c72f00db069bceb6b659796c161478ab6441edac32e58f0851e230bbf5d4570d105265c96a319ef",
            "file": "src/app/components/modals/modal-draggable/modal-draggable.service.ts",
            "properties": [
                {
                    "name": "modals",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "modal",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "modal",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalDraggableService {\r\n  private modals: any[] = [];\r\n\r\n  constructor() { }\r\n\r\n  add(modal: any) {\r\n    // add modal to array of active modals\r\n    this.modals.push(modal);\r\n  }\r\n\r\n  remove(id: string) {\r\n    // remove modal from array of active modals\r\n    this.modals = this.modals.filter(x => x.id !== id);\r\n  }\r\n\r\n  open(id: string) {\r\n    // open modal specified by id\r\n    const modal = this.modals.find(x => x.id === id);\r\n    modal.open();\r\n  }\r\n\r\n  close(id: string) {\r\n    // close modal specified by id\r\n    const modal = this.modals.find(x => x.id === id);\r\n    modal.close();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "ModalService",
            "id": "injectable-ModalService-53fefe5405331b8737e86e006e969e25ad91e6078fec6941d862cdeccc26ada7a029dad079b27cbad90789d8accf7c479686591c7eba0821d78d534590a41d10",
            "file": "src/app/components/modals/modal/modal.service.ts",
            "properties": [
                {
                    "name": "modals",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "modal",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "modal",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n  private modals: any[] = [];\r\n\r\n  constructor() { }\r\n\r\n  add(modal: any) {\r\n    // add modal to array of active modals\r\n    this.modals.push(modal);\r\n  }\r\n\r\n  remove(id: string) {\r\n    // remove modal from array of active modals\r\n    this.modals = this.modals.filter(x => x.id !== id);\r\n  }\r\n\r\n  open(id: string) {\r\n    // open modal specified by id\r\n    const modal = this.modals.find(x => x.id === id);\r\n    modal.open();\r\n  }\r\n\r\n  close(id: string) {\r\n    // close modal specified by id\r\n    const modal = this.modals.find(x => x.id === id);\r\n    modal.close();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-216456583e25428faed77a4328eb6552448b3ca5a60c594cca6093d48f5332766845debfe0c05c76cc89e95f1f958caf3ad9253a229c2cc3a570b8ec03f2b4c7",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ClickEscapeDirective",
            "id": "directive-ClickEscapeDirective-f3670a7d9ea9bb57c786e7bc430da59b6a23f52a31e9ebec700442a5920c953ab4003e940ccb753d6e002f22dd07fd7f83f6ef907146ae93cf25bee18b22252e",
            "file": "src/app/directives/click-escape.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\r\n\r\n// Keycode for ESCAPE\r\n// const ESCAPE = 27;\r\n\r\n@Directive({\r\n  selector: '[appClickEscape]'\r\n})\r\nexport class ClickEscapeDirective {\r\n  @Output() clickEscape = new EventEmitter<void>();\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n  // Listen on keydown events on a document level\r\n  @HostListener('window:keydown', ['$event']) \r\n    public handleKeyDown(event: KeyboardEvent) {\r\n      alert(\"event.key: \" + event.key);\r\n      if (event.key === 'ESCAPE') {\r\n        this.clickEscape.emit();\r\n      }\r\n    } \r\n}\r\n",
            "selector": "[appClickEscape]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "clickEscape",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:keydown', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TooltipPositionDirective",
            "id": "directive-TooltipPositionDirective-6ab7987101e61ac4e37be36bd5c7cb723299ffb7f31be2d2fdf3c408699417cf18013a40fa4eb44ecc8d93131eb158d3d98035c918fc76f008676d8840257e07",
            "file": "src/app/directives/tooltip-position.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appTooltipPosition]'\r\n})\r\nexport class TooltipPositionDirective {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('mouseenter', ['$event']) onMouseEnter(event) {\r\n    const body = document.body,\r\n    html = document.documentElement;\r\n\r\n    const height = Math.max( body.scrollHeight, body.offsetHeight, \r\n                       html.clientHeight, html.scrollHeight, html.offsetHeight );\r\n    \r\n    this.el.nativeElement.classList.remove('bottom'); \r\n    this.el.nativeElement.classList.remove('top');\r\n\r\n    if(event.clientY >= height - 50) {\r\n      this.el.nativeElement.classList.add('top');\r\n      this.el.nativeElement.classList.remove('bottom');\r\n    }else {\r\n      this.el.nativeElement.classList.remove('top');\r\n      this.el.nativeElement.classList.add('bottom');\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[appTooltipPosition]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onMouseEnter",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-357900f1d4546dd4fd5b39ce808c533cf515b4460babd9c0e694310a27c68530c4641e7e064303d46fae719072a073c8ee94ae2d518806a1badc4339d3cd2a4f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-utils'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-utils';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.container {\r\n    padding: 0.8rem;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container\">\r\n    <nav>\r\n        <!-- <a routerLink=\"/\">דף הבית</a> -->\r\n        <!-- <a routerLink=\"/test-page\">Test Page</a> -->\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-0eb3811bbf5c81162787413da043fdd07f869a45d4e5b421faf40476c20afd98ea601a51657bf9ed972a5cf7d3dab650eba289a9c45367fde96f649830ca405f-1",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 715,
                            "end": 730,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 716,
                                "end": 724,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 28,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "fnClick",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() color: string;\r\n  @Output() fnClick = new EventEmitter<string>();\r\n \r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n   @Input()\r\n   primary = false;\r\n \r\n   /**\r\n    * What background color to use\r\n    */\r\n   @Input()\r\n   backgroundColor?: string;\r\n \r\n   /**\r\n    * How large should the button be?\r\n    */\r\n   @Input()\r\n   size: 'small' | 'medium' | 'large' = 'medium';\r\n \r\n   /**\r\n    * Button contents\r\n    *\r\n    * @required\r\n    */\r\n   @Input()\r\n   label = 'Button';\r\n \r\n   /**\r\n    * Optional click handler\r\n    */\r\n  //  @Output() onClick = new EventEmitter<Event>();\r\n \r\n   public get classes(): string[] {\r\n     const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n \r\n     return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n   }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClick() {\r\n    this.fnClick.emit()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.storybook-button {\r\n    display: inline-block;\r\n    padding: .4rem 1.3rem;    \r\n    cursor: pointer;\r\n    margin: 1rem;\r\n    transition: opacity .2s;\r\n    outline: none;\r\n    font-weight: bold;\r\n    \r\n    &:disabled {\r\n        background: var(--dark-color);\r\n        color: var(--white-color);\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    &:hover:not(:disabled) {\r\n        opacity: 0.5;\r\n    }\r\n}\r\n\r\n.storybook-button--primary {\r\n    background: var(--primary-color);\r\n    color: var(--black-color);\r\n    border: 2px solid var(--black-color);\r\n    box-shadow: 0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\r\n    \r\n    &:disabled {\r\n        background: var(--dark-color);\r\n        color: var(--white-color);\r\n        cursor: not-allowed;\r\n    }\r\n}\r\n.storybook-button--secondary {\r\n    color: #333;\r\n    background-color: transparent;\r\n    border: 2px solid var(--black-color);\r\n    box-shadow: 0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\r\n    \r\n    &:disabled {\r\n        background: var(--dark-color);\r\n        color: var(--white-color);\r\n        cursor: not-allowed;\r\n    }\r\n}\r\n\r\n.storybook-button--small {\r\n    font-size: 12px;\r\n    padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n    font-size: 14px;\r\n    padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n    font-size: 16px;\r\n    padding: 12px 24px;\r\n}\r\n\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 47
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43,
                        "rawdescription": "\n\nOptional click handler\n",
                        "description": "<p>Optional click handler</p>\n"
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button class=\"btn-primary\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n>{{ label }}</button>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-63d5994f952dab2989a2834b7fb1a77111f2e93075e06ddcd29a10749815f6f3b2b78eee72266cbcc8e10b7b6778031404cec0184e5295fddd8bb1a322484cb4",
            "file": "src/app/components/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "translations",
                    "defaultValue": "{\r\n    custModalCaption1: 'פתח חלון נגרר',\r\n    custModalCaption2: 'פתח חלון יציב גבוה',\r\n    closeCaption: 'סגור'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDragModal",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDragModal",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ModalDraggableService } from '../modals/modal-draggable/modal-draggable.service';\r\nimport { ModalService } from '../modals/modal/modal.service';\r\nimport { TabsComponent } from '../tabs/tabs.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  translations = {\r\n    custModalCaption1: 'פתח חלון נגרר',\r\n    custModalCaption2: 'פתח חלון יציב גבוה',\r\n    closeCaption: 'סגור'\r\n  }\r\n\r\n  constructor(private modalService: ModalService, private modalDragService: ModalDraggableService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openModal(id: string) {\r\n      this.modalService.open(id);\r\n  }\r\n\r\n  closeModal(id: string) {\r\n      this.modalService.close(id);\r\n  }\r\n\r\n  openDragModal(id: string) {\r\n    this.modalDragService.open(id);\r\n}\r\n\r\n  closeDragModal(id: string) {\r\n      this.modalDragService.close(id);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// .input-controls {\r\n//     display: flex;\r\n//     justify-content: space-between;\r\n// }\r\n\r\napp-input,\r\napp-select,\r\napp-textarea {\r\n    width: 30%;\r\n}\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "ModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalDragService",
                        "type": "ModalDraggableService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "ModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalDragService",
                        "type": "ModalDraggableService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n    <!-- <h1>דף הבית</h1> -->\r\n    <app-tabs>\r\n        <app-tab [tabTitle]=\"'Modals'\">\r\n            <app-button [label]=\"translations.custModalCaption1\" [color]=\"'btn-primary'\" (click)=\"openDragModal('custom-modal-1')\"></app-button>\r\n            <app-button [label]=\"translations.custModalCaption2\" [color]=\"'btn-primary'\"(click)=\"openModal('custom-modal-2')\"></app-button>\r\n\r\n            <app-modal-draggable id=\"custom-modal-1\">\r\n                <div class=\"ico-close\">\r\n                    <i class=\"material-icons\" (click)=\"closeDragModal('custom-modal-1')\">close</i>\r\n                  </div>\r\n                <h1>חלון מודאלי נגרר</h1>\r\n                <p>דף הבית מלל: </p>\r\n                <app-button [label]=\"translations.closeCaption\" [color]=\"'btn-primary'\" (click)=\"closeDragModal('custom-modal-1')\"></app-button>\r\n            </app-modal-draggable>\r\n            \r\n            <app-modal id=\"custom-modal-2\">\r\n                <div class=\"ico-close\">\r\n                    <i class=\"material-icons\" (click)=\"closeModal('custom-modal-2')\">close</i>\r\n                  </div>\r\n                <h1>חלון מודאלי יציב גבוה</h1>\r\n                <div class=\"big-window\">\r\n                    <p>\r\n                        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Neque dolorum possimus aut! Deleniti suscipit minima aliquid, porro, quibusdam a quaerat mollitia dolores commodi molestiae omnis quo? Est vel sequi aliquid.\r\n                    </p>\r\n                </div>\r\n                <app-button [label]=\"translations.closeCaption\" [color]=\"'btn-primary'\" (click)=\"closeModal('custom-modal-2')\"></app-button>\r\n            </app-modal>\r\n            \r\n        </app-tab>\r\n        <app-tab tabTitle=\"Input\">\r\n            <app-input></app-input>\r\n        </app-tab>\r\n        <app-tab tabTitle=\"Select\">\r\n            <app-select></app-select>\r\n        </app-tab>\r\n        <app-tab tabTitle=\"Textarea\">\r\n            <app-textarea></app-textarea>\r\n        </app-tab>\r\n        <app-tab tabTitle=\"Tooltips\">            \r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Age</th>\r\n                    </tr>                    \r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><app-tooltips [text]=\"'Jonn'\" [tooltipText]=\"'Jonn'\"></app-tooltips></td>\r\n                        <td><app-tooltips [text]=\"'Smith'\" [tooltipText]=\"'Smith'\"></app-tooltips></td>\r\n                        <td><app-tooltips [text]=\"'32'\" [tooltipText]=\"'32'\"></app-tooltips></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><app-tooltips [text]=\"'Henry'\" [tooltipText]=\"'Henry'\"></app-tooltips></td>\r\n                        <td><app-tooltips [text]=\"'Ford'\" [tooltipText]=\"'Ford'\"></app-tooltips></td>\r\n                        <td><app-tooltips [text]=\"'60'\" [tooltipText]=\"'60'\"></app-tooltips></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><app-tooltips [text]=\"'Sofi'\" [tooltipText]=\"'Sofi'\"></app-tooltips></td>\r\n                        <td><app-tooltips [text]=\"'Loren'\" [tooltipText]=\"'Loren'\"></app-tooltips></td>\r\n                        <td><app-tooltips [text]=\"'55'\" [tooltipText]=\"'55'\"></app-tooltips></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </app-tab>\r\n    </app-tabs>\r\n    <!--<div class=\"input-controls\"></div>-->\r\n</div>\r\n\r\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-8adb05e98c7f14e5ecf53c9de0ba2b129020ad5f4e238f388dea0050583dd59e40ef5ab2776f7bb10a6f2942abc13c9a0377a173df03c20599739d1b7af71747",
            "file": "src/app/components/input-controls/input/input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "../input-controls.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['../input-controls.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class InputComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/************floating-Lable style*************/\r\n.floating-label,\r\n.floating-inner-label { \r\n    position: relative; \r\n    margin: 1.25rem 0; \r\n}\r\n.floating-input, .floating-select {\r\n    font-size: 14px;\r\n    padding: 4px 4px;\r\n    display: block;\r\n    width: 100% !important;\r\n    height: 30px;\r\n    background-color: transparent;\r\n    border-top: 1px solid var(--second-color);\r\n    border-right: 1px solid var(--second-color);    \r\n    border-bottom:3px solid var(--primary-color);\r\n    border-left: 1px solid var(--second-color);\r\n    min-width: 100px !important;\r\n}\r\n\r\n\r\n.floating-input:focus, .floating-select:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid var(--primary-color); \r\n}\r\n  \r\n.floating-label label {\r\n    color: #999; \r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    right: 5px;\r\n    top: 5px;\r\n    transition: 0.2s ease all; \r\n    -moz-transition: 0.2s ease all; \r\n    -webkit-transition: 0.2s ease all;\r\n    white-space: nowrap;\r\n}\r\n\r\n.floating-input:focus ~ label, \r\n.floating-input:not(:placeholder-shown) ~ label {\r\n    top: -18px;\r\n    font-size: 14px;\r\n}\r\n  \r\n.floating-select:focus ~ label, \r\n.floating-select:not([value=\"\"]):valid ~ label,\r\n.floating-select.selected:valid ~ label,/*milena test*/\r\n.floating-select.selected:disabled ~ label { /*milena test*/\r\n    top: -18px;\r\n    font-size: 14px;\r\n    /*color:var(--primary-color);*/  \r\n}\r\n\r\n.floating-select.selected:valid ~ label { /*milena test*/\r\n    font-weight: normal !important;\r\n}\r\n  \r\n.floating-input:not(:placeholder-shown) ~ label,\r\n.floating-select:not([value=\"\"]):valid ~ label {\r\n    color: var(--dark-color) !important;\r\n    font-weight: normal !important;\r\n}\r\n\r\n.floating-input:focus ~ label,\r\n.floating-select:focus ~ label {\r\n    color: var(--primary-color);\r\n    font-weight: normal !important;\r\n}\r\n\r\n/* active state */\r\n.floating-input:focus ~ .bar:before, .floating-input:focus ~ .bar:after, .floating-select:focus ~ .bar:before, .floating-select:focus ~ .bar:after {\r\n    width:50%;\r\n}\r\n  \r\n*, *:before, *:after {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n}\r\n\r\n/* highlighter */\r\n.highlight {\r\n    position: absolute;\r\n    height: 50%; \r\n    width: 100%; \r\n    bottom: 15%; \r\n    right: 0;\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n}\r\n\r\n/* active state */\r\n.floating-input:focus ~ .highlight , .floating-select:focus ~ .highlight {\r\n    -webkit-animation: inputHighlighter 0.3s ease;\r\n    -moz-animation: inputHighlighter 0.3s ease;\r\n    animation: inputHighlighter 0.3s ease;\r\n}\r\n\r\n/* animation */\r\n@-webkit-keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n@-moz-keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n@keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n\r\n/****  floating-Lable style end ****/\r\n\r\n\r\n/****  floating-inner-Lable style end ****/\r\n\r\n.floating-inner-label label {\r\n    color: #999; \r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    right: 5px;\r\n    top: 18px; //fixes\r\n    transition: 0.2s ease all; \r\n    -moz-transition: 0.2s ease all; \r\n    -webkit-transition: 0.2s ease all;\r\n    white-space: nowrap;\r\n}\r\n\r\n.floating-inner-label .line {\r\n    height: 3px;\r\n    width: 0;\r\n    position: absolute;\r\n    background-color: var(--primary-color); \r\n    display: inline-block;\r\n    transition: .3s width ease-in-out;\r\n    bottom: 0;\r\n    left: 0;\r\n}\r\n\r\n.floating-input.inner:focus ~ .line,\r\n.floating-input.inner:not(:placeholder-shown) ~ .line {\r\n    width: 100%;\r\n    background-color: var(--primary-color); \r\n    transition: .3s width ease-in-out;\r\n}\r\n\r\n.floating-input.inner:focus ~ label, \r\n.floating-input.inner:not(:placeholder-shown) ~ label {\r\n    top: 0;\r\n    font-size: 14px;\r\n    transition: 0.2s ease all; //fixes\r\n    -moz-transition: 0.2s ease all; //fixes\r\n    -webkit-transition: 0.2s ease all;//fixes\r\n}\r\n\r\n.floating-input.inner:focus {\r\n    outline: none;\r\n    border-bottom: 3px solid var(--second-color); \r\n}\r\n  \r\n\r\n.floating-input.inner,\r\n.floating-select.inner {\r\n    height: 42px;\r\n    padding: 16px 4px 0;\r\n    border-bottom:3px solid var(--second-color);\r\n}\r\n\r\n.floating-select.inner:focus ~ label, \r\n.floating-select.inner:not([value=\"\"]):valid ~ label,\r\n.floating-select.inner.selected:valid ~ label,/*milena test*/\r\n.floating-select.inner.selected:disabled ~ label { /*milena test*/\r\n    top: 0;\r\n    font-size: 14px;\r\n    /*color:var(--primary-color);*/  \r\n}\r\n  \r\n.floating-input.inner:focus ~ .highlight , .floating-select.inner:focus ~ .highlight {\r\n    -webkit-animation: inputHighlighter 0.3s ease; //fixes\r\n    -moz-animation: inputHighlighter 0.3s ease;//fixes\r\n    animation: inputHighlighter 0.3s ease;//fixes\r\n}\r\n/****  floating-inner-Lable style end ****/",
                    "styleUrl": "../input-controls.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"floating-label\">\r\n\t<input class=\"floating-input\" placeholder=\" \" type=\"text\" />\r\n\t<span class=\"highlight\"></span>\r\n\t<label>Label</label>\r\n</div>\r\n\r\n<div class=\"floating-inner-label\">\r\n\t<input class=\"floating-input inner\" placeholder=\" \" type=\"text\" />\r\n\t<span class=\"highlight\"></span>\r\n\t<label>Label</label>\r\n\t<div class=\"line\"></div>\r\n</div>"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-0d9ec0fe65a3bbbd3b7b6e29821736a9e1893730cc831f0ff89184757e86396f2cc542a4e8d770eb02f95c88f13ea98632227f40b4752450bdf982a1dd7bf71e",
            "file": "src/app/components/modals/modal/modal.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal",
            "styleUrls": [
                "./modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isModalOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:keydown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ModalService } from './modal.service';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: string;\r\n  private element: any;\r\n  \r\n  isModalOpened: boolean = false;\r\n\r\n  //close modal by press to Escape button\r\n  @HostListener('window:keydown', ['$event'])\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if(event.key === 'Escape' && this.isModalOpened) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  constructor(private modalService: ModalService, private el: ElementRef) {\r\n    \r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.element = this.el.nativeElement;\r\n    // ensure id attribute exists\r\n    if (!this.id) {\r\n        console.error('modal must have an id');\r\n        return;\r\n    }\r\n\r\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n    document.body.appendChild(this.element);\r\n\r\n    // close modal on background click\r\n    this.element.addEventListener('click', el => {\r\n      if (el.target.className === 'win-modal') {\r\n          this.close();\r\n      }\r\n    });\r\n \r\n    // add self (this modal instance) to the modal service so it's accessible from controllers\r\n    this.modalService.add(this);       \r\n  }\r\n\r\n  // remove self from modal service when component is destroyed\r\n  ngOnDestroy(): void {\r\n      this.modalService.remove(this.id);\r\n      this.element.remove();\r\n  }\r\n\r\n  // open modal\r\n  open(): void {\r\n      this.element.style.display = 'block';\r\n      document.body.classList.add('win-modal-open');\r\n      this.isModalOpened = true;\r\n  }\r\n\r\n  // close modal\r\n  close(): void {\r\n      this.element.style.display = 'none';\r\n      document.body.classList.remove('win-modal-open');\r\n      this.isModalOpened = false;\r\n  }\r\n\r\n  \r\n  // onClickEscape($event) {\r\n  //   debugger;\r\n  // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-modal {\r\n    /* modals are hidden by default */\r\n    display: none;\r\n\r\n    .win-modal {\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        // width: calc(#{$max-width} + .7rem);\r\n        margin: auto;\r\n\r\n        /* z-index must be higher than .win-modal-background */\r\n        z-index: 1000;\r\n        \r\n        /* enables scrolling for big modals */\r\n        overflow: auto;\r\n        // border: 1px solid red;\r\n        \r\n        .win-modal-body {\r\n            padding: 2rem;\r\n            background: #fff;\r\n            border: 2px solid var(--dark-color);\r\n            width: calc(100vw - 20%);\r\n            box-shadow: 0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);            \r\n            margin: 4rem auto;\r\n        }\r\n    }\r\n\r\n    .ico-close {\r\n        text-align: left;\r\n\r\n        .material-icons {\r\n            font-size: 2rem;\r\n            cursor: pointer;\r\n\r\n            &:hover {\r\n                color: rgba(0,0,0,0.5);\r\n            }\r\n        }\r\n    }\r\n\r\n    .win-modal-background {\r\n        /* modal background fixed across whole screen */\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n\r\n        /* semi-transparent black  */\r\n        background-color: rgba(0,0,0,0.5);\r\n        opacity: 0.75;\r\n        \r\n        /* z-index must be below .win-modal and above everything else  */\r\n        z-index: 900;\r\n    }\r\n\r\n    .big-window {\r\n        height: calc(100vh - 25rem);\r\n    }\r\n}\r\n\r\nbody.win-modal-open {\r\n    /* body overflow is hidden to hide main scrollbar when modal window is open */\r\n    overflow: hidden;\r\n}",
                    "styleUrl": "./modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "ModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "ModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "\r\n<div class=\"win-modal\"><!-- appClickEscape (clickEscape)=\"onClickEscape($event)\"-->\r\n  <div class=\"win-modal-body\"> \r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n<div class=\"win-modal-background\"></div>\r\n\r\n"
        },
        {
            "name": "ModalDraggableComponent",
            "id": "component-ModalDraggableComponent-857119f58163a3de1f3238691eb2850c4e4772521d11a9bc497c08e14e371ea909295af39618f143b9bf44409eeac17a7d359f037ab82cbbca7fc0e97efa0964",
            "file": "src/app/components/modals/modal-draggable/modal-draggable.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-draggable",
            "styleUrls": [
                "./modal-draggable.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-draggable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isModalOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "draggableModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:keydown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ModalDraggableService } from './modal-draggable.service';\r\n\r\n@Component({\r\n  selector: 'app-modal-draggable',\r\n  templateUrl: './modal-draggable.component.html',\r\n  styleUrls: ['./modal-draggable.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ModalDraggableComponent implements OnInit {\r\n\r\n  @Input() id: string;\r\n  private element: any;\r\n  \r\n  isModalOpened: boolean = false;\r\n\r\n  //close modal by press to Escape button\r\n  @HostListener('window:keydown', ['$event'])\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if(event.key === 'Escape' && this.isModalOpened) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  constructor(private modalService: ModalDraggableService, private el: ElementRef) {\r\n    \r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.element = this.el.nativeElement;\r\n    // ensure id attribute exists\r\n    if (!this.id) {\r\n        console.error('modal must have an id');\r\n        return;\r\n    }\r\n\r\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n    document.body.appendChild(this.element);\r\n\r\n    // close modal on background click\r\n    this.element.addEventListener('click', el => {\r\n      if (el.target.className === 'drag-modal') {\r\n          this.close();\r\n      }\r\n    });\r\n \r\n    // add self (this modal instance) to the modal service so it's accessible from controllers\r\n    this.modalService.add(this);   \r\n    \r\n    // draggable modal\r\n    this.draggableModal();\r\n    \r\n  }\r\n\r\n  // remove self from modal service when component is destroyed\r\n  ngOnDestroy(): void {\r\n      this.modalService.remove(this.id);\r\n      this.element.remove();\r\n  }\r\n\r\n  // open modal\r\n  open(): void {\r\n      this.element.style.display = 'block';\r\n      document.body.classList.add('drag-modal-open');\r\n      this.isModalOpened = true;\r\n  }\r\n\r\n  // close modal\r\n  close(): void {\r\n      this.element.style.display = 'none';\r\n      document.body.classList.remove('drag-modal-open');\r\n      this.isModalOpened = false;\r\n  }\r\n\r\n  draggableModal() {\r\n    var get = function(el) {\r\n      if (typeof el === 'string') {\r\n        return document.querySelector(el);\r\n      }\r\n      return el;\r\n    };\r\n    var dragable = function(parentEl, dragEl) {\r\n      var parent = get(parentEl);\r\n      var target = get(dragEl);\r\n      var drag = false;\r\n      var offsetX = 0;\r\n      var offsetY = 0;\r\n      var mousemoveTemp = null;\r\n    \r\n      if (target) {\r\n        var mouseX = function(e) {\r\n          if (e.pageX) {\r\n            return e.pageX;\r\n          }\r\n          if (e.clientX) {\r\n            return e.clientX + (document.documentElement.scrollLeft ?\r\n              document.documentElement.scrollLeft :\r\n              document.body.scrollLeft);\r\n          }\r\n          return null;\r\n        };\r\n    \r\n        var mouseY = function(e) {\r\n          if (e.pageY) {\r\n            return e.pageY;\r\n          }\r\n          if (e.clientY) {\r\n            return e.clientY + (document.documentElement.scrollTop ?\r\n              document.documentElement.scrollTop :\r\n              document.body.scrollTop);\r\n          }\r\n          return null;\r\n        };\r\n        \r\n        var move = function (x, y) {\r\n          var xPos = parseInt(target.style.left) || 0;\r\n          var yPos = parseInt(target.style.top) || 0;\r\n    \r\n          target.style.left = (xPos + x) + 'px';\r\n          target.style.top  = (yPos + y) + 'px';\r\n        };\r\n        \r\n        var mouseMoveHandler = function (e) {\r\n          e = e || window.event;\r\n          if(!drag){return true};\r\n    \r\n          var x = mouseX(e);\r\n          var y = mouseY(e);\r\n          if (x != offsetX || y != offsetY) {\r\n            move(x - offsetX, y - offsetY);\r\n            offsetX = x;\r\n            offsetY = y;\r\n          }\r\n          return false;\r\n        };\r\n        \r\n        var start_drag = function (e) {\r\n          e = e || window.event;\r\n    \r\n          offsetX=mouseX(e);\r\n          offsetY=mouseY(e);\r\n          drag=true; // basically we're using this to detect dragging\r\n    \r\n          // save any previous mousemove event handler:\r\n          if (document.body.onmousemove) {\r\n            mousemoveTemp = document.body.onmousemove;\r\n          }\r\n          document.body.onmousemove = mouseMoveHandler;\r\n          return false;\r\n        };\r\n        \r\n        var stop_drag = function () {\r\n          drag=false;      \r\n    \r\n          // restore previous mousemove event handler if necessary:\r\n          if (mousemoveTemp) {\r\n            document.body.onmousemove = mousemoveTemp;\r\n            mousemoveTemp = null;\r\n          }\r\n          return false;\r\n        };\r\n        \r\n        parent.onmousedown = start_drag;\r\n        parent.onmouseup = stop_drag;\r\n      }\r\n    }\r\n    \r\n    dragable('.drag-modal', '.drag-modal-body');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-modal-draggable {\r\n    /* modals are hidden by default */\r\n    display: none;\r\n\r\n    .drag-modal {\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        // width: calc(#{$max-width} + .7rem);\r\n        margin: auto;\r\n\r\n        /* z-index must be higher than .drag-modal-background */\r\n        z-index: 1000;\r\n        \r\n        /* enables scrolling for big modals */\r\n        overflow: auto;\r\n        // border: 1px solid red;\r\n        \r\n        .drag-modal-body {\r\n            padding: 2rem;\r\n            background: #fff;\r\n            border: 2px solid var(--dark-color);\r\n            width: calc(100vw - 20%);\r\n            box-shadow: 0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);            \r\n            margin: 4rem auto;\r\n\r\n            /* draggable modal */\r\n            position: relative;\r\n            cursor: move;\r\n        }\r\n    }\r\n\r\n    .ico-close {\r\n        text-align: left;\r\n\r\n        .material-icons {\r\n            font-size: 2rem;\r\n            cursor: pointer;\r\n\r\n            &:hover {\r\n                color: rgba(0,0,0,0.5);\r\n            }\r\n        }\r\n    }\r\n\r\n    .drag-modal-background {\r\n        /* modal background fixed across whole screen */\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n\r\n        /* semi-transparent black  */\r\n        background-color: rgba(0,0,0,0.5);\r\n        opacity: 0.75;\r\n        \r\n        /* z-index must be below .drag-modal and above everything else  */\r\n        z-index: 900;\r\n    }\r\n\r\n    .big-window {\r\n        height: calc(100vh - 25rem);\r\n    }\r\n}\r\n\r\nbody.drag-modal-open {\r\n    /* body overflow is hidden to hide main scrollbar when modal window is open */\r\n    overflow: hidden;\r\n}",
                    "styleUrl": "./modal-draggable.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "ModalDraggableService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "ModalDraggableService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"drag-modal\">\r\n  <div class=\"drag-modal-body\"> \r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n<div class=\"drag-modal-background\"></div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-cc8f14ff56ed964e7b5f450346ca938aa7bc3a952a3f93de0047f34ad32d735beac7881c99db7e1bcb503f84460248a8d315cbb579a997f1f1c0c0592c1e9044",
            "file": "src/app/components/input-controls/select/select.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [
                "../input-controls.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elSelectCtrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'selectCtrl', {static: true}"
                        }
                    ]
                },
                {
                    "name": "selectedIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selectOptions",
                    "defaultValue": "[\r\n    {text: '', value: ''},    \r\n    {text: 'תל אביב', value: '111'},\r\n    {text: 'רמת גן', value: '222'},\r\n    {text: 'פתח תקווה', value: '333'},\r\n    {text: 'חולון', value: '444'},\r\n    {text: 'ראשון לציון', value: '555'}\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['../input-controls.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SelectComponent implements OnInit, AfterViewInit {\r\n  selectedIndex: number = 0;\r\n\r\n  selectOptions = [\r\n    {text: '', value: ''},    \r\n    {text: 'תל אביב', value: '111'},\r\n    {text: 'רמת גן', value: '222'},\r\n    {text: 'פתח תקווה', value: '333'},\r\n    {text: 'חולון', value: '444'},\r\n    {text: 'ראשון לציון', value: '555'}\r\n  ]\r\n\r\n  @ViewChild('selectCtrl', {static: true}) elSelectCtrl: ElementRef;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const firstOptionValue = this.elSelectCtrl.nativeElement.options[this.selectedIndex].value;\r\n\r\n    if(firstOptionValue) {\r\n      this.elSelectCtrl.nativeElement.classList.add('selected');\r\n    } else {\r\n      this.elSelectCtrl.nativeElement.classList.remove('selected');\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/************floating-Lable style*************/\r\n.floating-label,\r\n.floating-inner-label { \r\n    position: relative; \r\n    margin: 1.25rem 0; \r\n}\r\n.floating-input, .floating-select {\r\n    font-size: 14px;\r\n    padding: 4px 4px;\r\n    display: block;\r\n    width: 100% !important;\r\n    height: 30px;\r\n    background-color: transparent;\r\n    border-top: 1px solid var(--second-color);\r\n    border-right: 1px solid var(--second-color);    \r\n    border-bottom:3px solid var(--primary-color);\r\n    border-left: 1px solid var(--second-color);\r\n    min-width: 100px !important;\r\n}\r\n\r\n\r\n.floating-input:focus, .floating-select:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid var(--primary-color); \r\n}\r\n  \r\n.floating-label label {\r\n    color: #999; \r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    right: 5px;\r\n    top: 5px;\r\n    transition: 0.2s ease all; \r\n    -moz-transition: 0.2s ease all; \r\n    -webkit-transition: 0.2s ease all;\r\n    white-space: nowrap;\r\n}\r\n\r\n.floating-input:focus ~ label, \r\n.floating-input:not(:placeholder-shown) ~ label {\r\n    top: -18px;\r\n    font-size: 14px;\r\n}\r\n  \r\n.floating-select:focus ~ label, \r\n.floating-select:not([value=\"\"]):valid ~ label,\r\n.floating-select.selected:valid ~ label,/*milena test*/\r\n.floating-select.selected:disabled ~ label { /*milena test*/\r\n    top: -18px;\r\n    font-size: 14px;\r\n    /*color:var(--primary-color);*/  \r\n}\r\n\r\n.floating-select.selected:valid ~ label { /*milena test*/\r\n    font-weight: normal !important;\r\n}\r\n  \r\n.floating-input:not(:placeholder-shown) ~ label,\r\n.floating-select:not([value=\"\"]):valid ~ label {\r\n    color: var(--dark-color) !important;\r\n    font-weight: normal !important;\r\n}\r\n\r\n.floating-input:focus ~ label,\r\n.floating-select:focus ~ label {\r\n    color: var(--primary-color);\r\n    font-weight: normal !important;\r\n}\r\n\r\n/* active state */\r\n.floating-input:focus ~ .bar:before, .floating-input:focus ~ .bar:after, .floating-select:focus ~ .bar:before, .floating-select:focus ~ .bar:after {\r\n    width:50%;\r\n}\r\n  \r\n*, *:before, *:after {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n}\r\n\r\n/* highlighter */\r\n.highlight {\r\n    position: absolute;\r\n    height: 50%; \r\n    width: 100%; \r\n    bottom: 15%; \r\n    right: 0;\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n}\r\n\r\n/* active state */\r\n.floating-input:focus ~ .highlight , .floating-select:focus ~ .highlight {\r\n    -webkit-animation: inputHighlighter 0.3s ease;\r\n    -moz-animation: inputHighlighter 0.3s ease;\r\n    animation: inputHighlighter 0.3s ease;\r\n}\r\n\r\n/* animation */\r\n@-webkit-keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n@-moz-keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n@keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n\r\n/****  floating-Lable style end ****/\r\n\r\n\r\n/****  floating-inner-Lable style end ****/\r\n\r\n.floating-inner-label label {\r\n    color: #999; \r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    right: 5px;\r\n    top: 18px; //fixes\r\n    transition: 0.2s ease all; \r\n    -moz-transition: 0.2s ease all; \r\n    -webkit-transition: 0.2s ease all;\r\n    white-space: nowrap;\r\n}\r\n\r\n.floating-inner-label .line {\r\n    height: 3px;\r\n    width: 0;\r\n    position: absolute;\r\n    background-color: var(--primary-color); \r\n    display: inline-block;\r\n    transition: .3s width ease-in-out;\r\n    bottom: 0;\r\n    left: 0;\r\n}\r\n\r\n.floating-input.inner:focus ~ .line,\r\n.floating-input.inner:not(:placeholder-shown) ~ .line {\r\n    width: 100%;\r\n    background-color: var(--primary-color); \r\n    transition: .3s width ease-in-out;\r\n}\r\n\r\n.floating-input.inner:focus ~ label, \r\n.floating-input.inner:not(:placeholder-shown) ~ label {\r\n    top: 0;\r\n    font-size: 14px;\r\n    transition: 0.2s ease all; //fixes\r\n    -moz-transition: 0.2s ease all; //fixes\r\n    -webkit-transition: 0.2s ease all;//fixes\r\n}\r\n\r\n.floating-input.inner:focus {\r\n    outline: none;\r\n    border-bottom: 3px solid var(--second-color); \r\n}\r\n  \r\n\r\n.floating-input.inner,\r\n.floating-select.inner {\r\n    height: 42px;\r\n    padding: 16px 4px 0;\r\n    border-bottom:3px solid var(--second-color);\r\n}\r\n\r\n.floating-select.inner:focus ~ label, \r\n.floating-select.inner:not([value=\"\"]):valid ~ label,\r\n.floating-select.inner.selected:valid ~ label,/*milena test*/\r\n.floating-select.inner.selected:disabled ~ label { /*milena test*/\r\n    top: 0;\r\n    font-size: 14px;\r\n    /*color:var(--primary-color);*/  \r\n}\r\n  \r\n.floating-input.inner:focus ~ .highlight , .floating-select.inner:focus ~ .highlight {\r\n    -webkit-animation: inputHighlighter 0.3s ease; //fixes\r\n    -moz-animation: inputHighlighter 0.3s ease;//fixes\r\n    animation: inputHighlighter 0.3s ease;//fixes\r\n}\r\n/****  floating-inner-Lable style end ****/",
                    "styleUrl": "../input-controls.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"floating-label\">\r\n\t<select #selectCtrl class=\"floating-select\" onclick=\"this.setAttribute('value', this.value);\" value=\"\">\r\n        <option *ngFor=\"let option of selectOptions; let i=index\" [selected]=\"i===selectedIndex\" [value]=\"option.value\">{{option.text}}</option>    \r\n    </select>\r\n\t<span class=\"highlight\"></span>\r\n\t<label>Label</label>\r\n</div>\r\n\r\n<div class=\"floating-inner-label\">\r\n\t<select #selectCtrl class=\"floating-select inner\" onclick=\"this.setAttribute('value', this.value);\" value=\"\">\r\n        <option *ngFor=\"let option of selectOptions; let i=index\" [selected]=\"i===selectedIndex\" [value]=\"option.value\">{{option.text}}</option>    \r\n    </select>\r\n\t<span class=\"highlight\"></span>\r\n\t<label>Label</label>\r\n</div>\r\n\r\n<select name=\"clients\" size=\"3\" multiple=\"multiple\">\r\n\t<option value=\"5311\" selected=\"selected\">5311</option>\r\n\t<option value=\"9999\" selected=\"selected\">9999</option>\r\n</select>"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-0af2f64f568ad27ee34e615a28b0b43ac5ce03980f69455cd98fcfa05c21f1628442a99384c565c42bd923f0b7045b9b739cbe8c5f498682d9ccabe76839e145",
            "file": "src/app/components/tabs/tab/tab.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [
                "./tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tabTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tab',\r\n  templateUrl: './tab.component.html',\r\n  styleUrls: ['./tab.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TabComponent implements OnInit {\r\n  @Input('tabTitle') title: string;\r\n  @Input() active = false;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".pane{\r\n    padding: 1em;\r\n}",
                    "styleUrl": "./tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [hidden]=\"!active\" class=\"pane\">\r\n    <ng-content></ng-content>\r\n</div>"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-691df65fe0b427b0d7be1e7a90815b107671d88d6cbd51e1b7f63b7facd69e7f2b6fdeffefabecb53b8165aa6b2dcb4d8c7b9ef793fa35deaa7649078d5005c6",
            "file": "src/app/components/tabs/tabs.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [
                "./tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabComponent>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList, ViewEncapsulation } from '@angular/core';\r\nimport { TabComponent } from './tab/tab.component';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TabsComponent implements OnInit, AfterContentInit {\r\n  \r\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n  // contentChildren are set\r\n  ngAfterContentInit() {\r\n    // get all active tabs\r\n    let activeTabs = this.tabs.filter((tab)=>tab.active);\r\n    \r\n    // if there is no active tab set, activate the first\r\n    if(activeTabs.length === 0) {\r\n      this.selectTab(this.tabs.first);\r\n    }\r\n  }\r\n  \r\n  selectTab(tab: any){\r\n    // deactivate all tabs\r\n    this.tabs.toArray().forEach(tab => tab.active = false);\r\n    \r\n    // activate the tab the user has clicked on.\r\n    tab.active = true;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tab-close {\r\n    color: gray;\r\n    text-align: right;\r\n    cursor: pointer;\r\n}\r\n\r\nul {\r\n    list-style: none;\r\n    display: flex; \r\n}\r\n\r\n.nav-tabs {\r\n    border-bottom: 2px solid var(--dark-color);\r\n}\r\n\r\na {\r\n    color: var(--dark-color);\r\n    font-weight: bold;\r\n}\r\n\r\n.nav {\r\n    padding-left: 0;\r\n    margin-bottom: 0;\r\n    list-style: none;\r\n}\r\n\r\nul {\r\n    margin-top: 0;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.nav-tabs>li {\r\n    float: left;\r\n    margin-bottom: -2px;\r\n}\r\n.nav>li {\r\n    position: relative;\r\n    display: block;\r\n}\r\n\r\n.nav-tabs>li.active>a, \r\n.nav-tabs>li.active>a:hover, \r\n.nav-tabs>li.active>a:focus {\r\n    color: var(--primary-color);\r\n    font-weight: bold;\r\n    cursor: default;\r\n    background-color: #fff;\r\n    border: 2px solid var(--dark-color);\r\n    border-bottom-color: transparent;\r\n}\r\n\r\n.nav-tabs>li>a {\r\n    margin-right: 2px;\r\n    line-height: 1.42857143;\r\n    border: 1px solid transparent;\r\n}\r\n.nav>li>a {\r\n    position: relative;\r\n    display: block;\r\n    padding: 10px 15px;\r\n}\r\n\r\n",
                    "styleUrl": "./tabs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit",
                "AfterContentInit"
            ],
            "templateData": "<ul class=\"nav nav-tabs\">\r\n    <li *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" [class.active]=\"tab.active\">\r\n      <a href=\"#\">{{tab.title}}</a>\r\n    </li>\r\n</ul>\r\n<ng-content></ng-content>"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-9676478226929f4d7098ca076aa0639647f1686b89747cc99a94f2589f541fb224bd23027764bbaf6c10b9da1f5c91f729d8cc7fdd9d83220e663ee340ed2bba",
            "file": "src/app/components/input-controls/textarea/textarea.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea",
            "styleUrls": [
                "../input-controls.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-textarea',\r\n  templateUrl: './textarea.component.html',\r\n  styleUrls: ['../input-controls.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TextareaComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/************floating-Lable style*************/\r\n.floating-label,\r\n.floating-inner-label { \r\n    position: relative; \r\n    margin: 1.25rem 0; \r\n}\r\n.floating-input, .floating-select {\r\n    font-size: 14px;\r\n    padding: 4px 4px;\r\n    display: block;\r\n    width: 100% !important;\r\n    height: 30px;\r\n    background-color: transparent;\r\n    border-top: 1px solid var(--second-color);\r\n    border-right: 1px solid var(--second-color);    \r\n    border-bottom:3px solid var(--primary-color);\r\n    border-left: 1px solid var(--second-color);\r\n    min-width: 100px !important;\r\n}\r\n\r\n\r\n.floating-input:focus, .floating-select:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid var(--primary-color); \r\n}\r\n  \r\n.floating-label label {\r\n    color: #999; \r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    right: 5px;\r\n    top: 5px;\r\n    transition: 0.2s ease all; \r\n    -moz-transition: 0.2s ease all; \r\n    -webkit-transition: 0.2s ease all;\r\n    white-space: nowrap;\r\n}\r\n\r\n.floating-input:focus ~ label, \r\n.floating-input:not(:placeholder-shown) ~ label {\r\n    top: -18px;\r\n    font-size: 14px;\r\n}\r\n  \r\n.floating-select:focus ~ label, \r\n.floating-select:not([value=\"\"]):valid ~ label,\r\n.floating-select.selected:valid ~ label,/*milena test*/\r\n.floating-select.selected:disabled ~ label { /*milena test*/\r\n    top: -18px;\r\n    font-size: 14px;\r\n    /*color:var(--primary-color);*/  \r\n}\r\n\r\n.floating-select.selected:valid ~ label { /*milena test*/\r\n    font-weight: normal !important;\r\n}\r\n  \r\n.floating-input:not(:placeholder-shown) ~ label,\r\n.floating-select:not([value=\"\"]):valid ~ label {\r\n    color: var(--dark-color) !important;\r\n    font-weight: normal !important;\r\n}\r\n\r\n.floating-input:focus ~ label,\r\n.floating-select:focus ~ label {\r\n    color: var(--primary-color);\r\n    font-weight: normal !important;\r\n}\r\n\r\n/* active state */\r\n.floating-input:focus ~ .bar:before, .floating-input:focus ~ .bar:after, .floating-select:focus ~ .bar:before, .floating-select:focus ~ .bar:after {\r\n    width:50%;\r\n}\r\n  \r\n*, *:before, *:after {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n}\r\n\r\n/* highlighter */\r\n.highlight {\r\n    position: absolute;\r\n    height: 50%; \r\n    width: 100%; \r\n    bottom: 15%; \r\n    right: 0;\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n}\r\n\r\n/* active state */\r\n.floating-input:focus ~ .highlight , .floating-select:focus ~ .highlight {\r\n    -webkit-animation: inputHighlighter 0.3s ease;\r\n    -moz-animation: inputHighlighter 0.3s ease;\r\n    animation: inputHighlighter 0.3s ease;\r\n}\r\n\r\n/* animation */\r\n@-webkit-keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n@-moz-keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n@keyframes inputHighlighter {\r\n    from { background: var(--primary-color); }\r\n    to { width:0; background: transparent; }\r\n}\r\n\r\n/****  floating-Lable style end ****/\r\n\r\n\r\n/****  floating-inner-Lable style end ****/\r\n\r\n.floating-inner-label label {\r\n    color: #999; \r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    right: 5px;\r\n    top: 18px; //fixes\r\n    transition: 0.2s ease all; \r\n    -moz-transition: 0.2s ease all; \r\n    -webkit-transition: 0.2s ease all;\r\n    white-space: nowrap;\r\n}\r\n\r\n.floating-inner-label .line {\r\n    height: 3px;\r\n    width: 0;\r\n    position: absolute;\r\n    background-color: var(--primary-color); \r\n    display: inline-block;\r\n    transition: .3s width ease-in-out;\r\n    bottom: 0;\r\n    left: 0;\r\n}\r\n\r\n.floating-input.inner:focus ~ .line,\r\n.floating-input.inner:not(:placeholder-shown) ~ .line {\r\n    width: 100%;\r\n    background-color: var(--primary-color); \r\n    transition: .3s width ease-in-out;\r\n}\r\n\r\n.floating-input.inner:focus ~ label, \r\n.floating-input.inner:not(:placeholder-shown) ~ label {\r\n    top: 0;\r\n    font-size: 14px;\r\n    transition: 0.2s ease all; //fixes\r\n    -moz-transition: 0.2s ease all; //fixes\r\n    -webkit-transition: 0.2s ease all;//fixes\r\n}\r\n\r\n.floating-input.inner:focus {\r\n    outline: none;\r\n    border-bottom: 3px solid var(--second-color); \r\n}\r\n  \r\n\r\n.floating-input.inner,\r\n.floating-select.inner {\r\n    height: 42px;\r\n    padding: 16px 4px 0;\r\n    border-bottom:3px solid var(--second-color);\r\n}\r\n\r\n.floating-select.inner:focus ~ label, \r\n.floating-select.inner:not([value=\"\"]):valid ~ label,\r\n.floating-select.inner.selected:valid ~ label,/*milena test*/\r\n.floating-select.inner.selected:disabled ~ label { /*milena test*/\r\n    top: 0;\r\n    font-size: 14px;\r\n    /*color:var(--primary-color);*/  \r\n}\r\n  \r\n.floating-input.inner:focus ~ .highlight , .floating-select.inner:focus ~ .highlight {\r\n    -webkit-animation: inputHighlighter 0.3s ease; //fixes\r\n    -moz-animation: inputHighlighter 0.3s ease;//fixes\r\n    animation: inputHighlighter 0.3s ease;//fixes\r\n}\r\n/****  floating-inner-Lable style end ****/",
                    "styleUrl": "../input-controls.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"floating-label\">\r\n\t<textarea class=\"floating-input\" rows=\"6\" cols=\"100\" placeholder=\" \"></textarea>\r\n\t<span class=\"highlight\"></span>\r\n\t<label>Label</label>\r\n</div>\r\n\r\n<div class=\"floating-inner-label\">\r\n\t<textarea class=\"floating-input inner\" rows=\"6\" cols=\"100\" placeholder=\" \"></textarea>\r\n\t<span class=\"highlight\"></span>\r\n\t<label>Label</label>\r\n</div>"
        },
        {
            "name": "TooltipsComponent",
            "id": "component-TooltipsComponent-0e2cc4bf11eabdc0c8908f136e56748108761dfc8cfc9ea7a27100834acd9b2626331e41cd59198d1734b57516a348f97f539d6042c2e3ba418857a1c4e7c8c4",
            "file": "src/app/components/tooltips/tooltips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltips",
            "styleUrls": [
                "./tooltips.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltips.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tooltips',\n  templateUrl: './tooltips.component.html',\n  styleUrls: ['./tooltips.component.scss']\n})\nexport class TooltipsComponent implements OnInit {\n\n  @Input() text: string;\n  @Input() tooltipText: string;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tooltip {\r\n    position: relative;\r\n    display: inline-block;\r\n    border-bottom: 1px dotted black;\r\n  }\r\n  \r\n  .tooltip .tooltiptext {\r\n    visibility: hidden;\r\n    width: 120px;\r\n    background-color: #555;\r\n    color: #fff;\r\n    text-align: center;\r\n    border-radius: 6px;\r\n    padding: 5px 0;\r\n    position: absolute;\r\n    z-index: 1;\r\n    left: 50%;\r\n    margin-left: -60px;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n  }\r\n\r\n  .tooltip .tooltiptext.top {\r\n    bottom: 125%;\r\n  }\r\n\r\n  .tooltip .tooltiptext.bottom {\r\n    bottom: -125%;\r\n  }\r\n  \r\n  .tooltip .tooltiptext.bottom::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: 100%;\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: transparent transparent #555 transparent;\r\n  }\r\n\r\n  .tooltip .tooltiptext.top::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: #555 transparent transparent transparent;\r\n  }\r\n  \r\n  .tooltip:hover .tooltiptext {\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }",
                    "styleUrl": "./tooltips.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"tooltip\">{{text}}\n    <span class=\"tooltiptext\" appTooltipPosition>{{tooltipText}}</span>\n</div>\n  \n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-8fb5f3cafb757a3d427960ae80dbfad7cbd61be3bd38f0f8565338682663019dc8b6459bf248f908eb05d10ef35d701f90aea55f9758b8b3427432a6f52f0734",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ModalModule } from './components/modals/modal/modal.module';\r\nimport { ModalDraggableModule } from './components/modals/modal-draggable/modal-draggable.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { InputComponent } from './components/input-controls/input/input.component';\r\nimport { SelectComponent } from './components/input-controls/select/select.component';\r\nimport { ClickEscapeDirective } from './directives/click-escape.directive';\r\nimport { TextareaComponent } from './components/input-controls/textarea/textarea.component';\r\nimport { TabsComponent } from './components/tabs/tabs.component';\r\nimport { TabComponent } from './components/tabs/tab/tab.component';\nimport { TooltipsComponent } from './components/tooltips/tooltips.component';\nimport { TooltipPositionDirective } from './directives/tooltip-position.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ButtonComponent,\r\n    InputComponent,\r\n    SelectComponent,\r\n    ClickEscapeDirective,\r\n    TextareaComponent,\r\n    TabsComponent,\r\n    TabComponent,\r\n    TooltipsComponent,\r\n    TooltipPositionDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ModalModule,\r\n    ModalDraggableModule,\r\n    AppRoutingModule,\r\n    DragDropModule\r\n  ],\r\n  exports: [\r\n    DragDropModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ClickEscapeDirective"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SelectComponent"
                        },
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabsComponent"
                        },
                        {
                            "name": "TextareaComponent"
                        },
                        {
                            "name": "TooltipPositionDirective"
                        },
                        {
                            "name": "TooltipsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ModalDraggableModule"
                        },
                        {
                            "name": "ModalModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-fa95d377154f7e380cd4dcc1e8823b9f90b4601f3181d1501ac9dc15dca8fab0cd9cd45f1d67cd6b21c87b54a881b08fd7db9d2e6ea5d697662bf6b58293cf9b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\n\r\n// import { TestPageComponent } from './test-page';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    // { path: 'test-page', component: TestPageComponent },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ModalDraggableModule",
            "id": "module-ModalDraggableModule-ccf09a2644111760ead98fa917b71270d675ee6232c4c15b897126c0000883db6f3bac0ef0b4fab83b1372c2a5a2615e917a2b5b1cfadf25390141a4c286b480",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/modals/modal-draggable/modal-draggable.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ModalDraggableComponent } from './modal-draggable.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ModalDraggableComponent],\r\n    exports: [ModalDraggableComponent]\r\n})\r\nexport class ModalDraggableModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ModalDraggableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ModalDraggableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ModalModule",
            "id": "module-ModalModule-3e68863cce1ff6076ace8c813412aaa8d54fed504b952c32f84773bb8d26592d3599575a7a2bfb1fb7a29b4c990e51760c3d1510be1f10738dc8078d6da742fd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/modals/modal/modal.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ModalComponent } from './modal.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ModalComponent],\r\n    exports: [ModalComponent]\r\n})\r\nexport class ModalModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ModalComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ModalComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/button/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "**",
                        "redirectTo": ""
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 40,
                "coverageCount": "4/10",
                "status": "medium"
            },
            {
                "filePath": "src/app/components/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input-controls/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input-controls/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input-controls/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modals/modal-draggable/modal-draggable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalDraggableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modals/modal-draggable/modal-draggable.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ModalDraggableService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modals/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modals/modal/modal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ModalService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tabs/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tooltips/tooltips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/click-escape.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClickEscapeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/tooltip-position.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipPositionDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}